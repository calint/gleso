document
	thumbnail
	title
> compile
what is thumbnail?
> a class
class document
	field thumbnail
	field title

class thumbnail

what is title?
> a class
c document
	f thumbnail
	f title

c thumbnail
c title

> 
c any
	a name
	a thumbnail
	ra size_in_bytes  // readonly attribute
	f load file : err // returns err or nothing
	f save file : err
	vfr render   // virtual readonly function
.
c document any   // document inherits any
	vrfo render    // virtual readonly function overrides any::draw 
	am references   // many references including none and one
.
c thumbnail
c title
c file

document    // using type document, variable names available d,doc,...
d.load sample document 2.doc   // document assumed name d, if err returned stack rollback
d.title to out  // writes doc.title bytes to stream out
d.render

> 1+1
2     // assumed [fiii] float format
> a=int(2+2)
4
> b=float(3)
3.0
> c=a+b
a is int and b is float
> c=a+int(b)
7
> d=a,b,c    // d is a vector of size 3
> p=x,y,z
x has not yet been declared
> x=float(1)
1
> p=x,0,0     // p is a float vector  equivalent to p=float(x,0,0) since x is float
1  0  0   // float is default   compare with   int(1  0  0)
> p+=1
p is vector of size three, 1 is scalar, size one, try adding a vector of same size, i.e. p+=1,0,0
> p+=1,0,0   // alternate command: try
2  0  0
> p*=2
4  0  0
> file data.dat open for write   // if exception while writing file autoclosed and stack rolled back
file(data.dat)
> p to file     // 3*4 bytes written to file    file content 0x0004 0x0000 0x0000 0x0000
> [3]float q from file  // file read into vector of 3 floats   compare   int[3]q from file
tip. alternate syntax file|[3]q    file|int a    file|int(i){i++}|int a  reads next int in file, increments it and stores it in a
> p==q
true    // compared memory content
> v=1,0,0,1
1  0  0  1
> v+q
v and q have different sizes. v is size 4 and q is size 3.  try v+(q,0)
> q=q,1
4  0  0  1
> v+q
5  0  0  2
